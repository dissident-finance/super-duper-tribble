{
  "contractName": "ReentrancyGuard",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. * Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb2fbd0f9a0bd0d99ace5603f1ce5388ed7d81031a188f5f4667e702fe690e61a\",\"urls\":[\"bzz-raw://b5a018485e3e184d24fabf939a2ca2b82a95b55ad7fcb109f2005d755ddedd29\",\"dweb:/ipfs/QmbpUfNbKjnVhARJRwMvD4h5z6ajYcdAB5Up6m1V3Rf2Ee\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061014a806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638129fc1c14610030575b600080fd5b61003861003a565b005b600054610100900460ff168061005357506100536100e1565b80610061575060005460ff16155b61009c5760405162461bcd60e51b815260040180806020018281038252602e8152602001806100e8602e913960400191505060405180910390fd5b600054610100900460ff161580156100c7576000805460ff1961ff0019909116610100171660011790555b600160335580156100de576000805461ff00191690555b50565b303b159056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a72315820efefdc38b236b9034048f318265df5d5c946ecf2ee092ea640273a3a781642ed64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80638129fc1c14610030575b600080fd5b61003861003a565b005b600054610100900460ff168061005357506100536100e1565b80610061575060005460ff16155b61009c5760405162461bcd60e51b815260040180806020018281038252602e8152602001806100e8602e913960400191505060405180910390fd5b600054610100900460ff161580156100c7576000805460ff1961ff0019909116610100171660011790555b600160335580156100de576000805461ff00191690555b50565b303b159056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a72315820efefdc38b236b9034048f318265df5d5c946ecf2ee092ea640273a3a781642ed64736f6c63430005100032",
  "sourceMap": "619:976:11:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;619:976:11;;;;;;;",
  "deployedSourceMap": "619:976:11:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;619:976:11;;;;;;;;;;;;;;;;;;;769:214;;;:::i;:::-;;;1024:12:12;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:12;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:12;;;;;1225:18;1213:4;1225:18;;;1170:80;975:1:11;959:13;:17;1264:55:12;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:12;;;1264:55;769:214:11;:::o;1409:498:12:-;1820:4;1864:17;1895:7;1409:498;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n */\ncontract ReentrancyGuard is Initializable {\n    // counter to allow mutex lock with only one SSTORE operation\n    uint256 private _guardCounter;\n\n    function initialize() public initializer {\n        // The counter starts at one to prevent changing it from zero to a non-zero\n        // value, which is a more expensive operation.\n        _guardCounter = 1;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _guardCounter += 1;\n        uint256 localCounter = _guardCounter;\n        _;\n        require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\");\n    }\n\n    uint256[50] private ______gap;\n}\n",
  "sourcePath": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol",
    "exportedSymbols": {
      "ReentrancyGuard": [
        1533
      ]
    },
    "id": 1534,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1494,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 1495,
        "nodeType": "ImportDirective",
        "scope": 1534,
        "sourceUnit": 1603,
        "src": "25:60:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1496,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1602,
              "src": "647:13:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$1602",
                "typeString": "contract Initializable"
              }
            },
            "id": 1497,
            "nodeType": "InheritanceSpecifier",
            "src": "647:13:11"
          }
        ],
        "contractDependencies": [
          1602
        ],
        "contractKind": "contract",
        "documentation": "@dev Contract module that helps prevent reentrant calls to a function.\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\navailable, which can be applied to functions to make sure there are no nested\n(reentrant) calls to them.\n * Note that because there is a single `nonReentrant` guard, functions marked as\n`nonReentrant` may not call one another. This can be worked around by making\nthose functions `private`, and then adding `external` `nonReentrant` entry\npoints to them.",
        "fullyImplemented": true,
        "id": 1533,
        "linearizedBaseContracts": [
          1533,
          1602
        ],
        "name": "ReentrancyGuard",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1499,
            "name": "_guardCounter",
            "nodeType": "VariableDeclaration",
            "scope": 1533,
            "src": "733:29:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1498,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "733:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1508,
              "nodeType": "Block",
              "src": "810:173:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1504,
                      "name": "_guardCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1499,
                      "src": "959:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "975:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "959:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1507,
                  "nodeType": "ExpressionStatement",
                  "src": "959:17:11"
                }
              ]
            },
            "documentation": null,
            "id": 1509,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1502,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1501,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1577,
                  "src": "798:11:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "798:11:11"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "788:2:11"
            },
            "returnParameters": {
              "id": 1503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "810:0:11"
            },
            "scope": 1533,
            "src": "769:214:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1527,
              "nodeType": "Block",
              "src": "1382:175:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1511,
                      "name": "_guardCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1499,
                      "src": "1392:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1409:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1392:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1514,
                  "nodeType": "ExpressionStatement",
                  "src": "1392:18:11"
                },
                {
                  "assignments": [
                    1516
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1516,
                      "name": "localCounter",
                      "nodeType": "VariableDeclaration",
                      "scope": 1527,
                      "src": "1420:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1515,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1420:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1518,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 1517,
                    "name": "_guardCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1499,
                    "src": "1443:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1420:36:11"
                },
                {
                  "id": 1519,
                  "nodeType": "PlaceholderStatement",
                  "src": "1466:1:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1521,
                          "name": "localCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1516,
                          "src": "1485:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1522,
                          "name": "_guardCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1499,
                          "src": "1501:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1485:29:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "id": 1524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1516:33:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                          "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                        },
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                          "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                        }
                      ],
                      "id": 1520,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1786,
                        1787
                      ],
                      "referencedDeclaration": 1787,
                      "src": "1477:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1477:73:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1526,
                  "nodeType": "ExpressionStatement",
                  "src": "1477:73:11"
                }
              ]
            },
            "documentation": "@dev Prevents a contract from calling itself, directly or indirectly.\nCalling a `nonReentrant` function from another `nonReentrant`\nfunction is not supported. It is possible to prevent this from happening\nby making the `nonReentrant` function external, and make it call a\n`private` function that does the actual work.",
            "id": 1528,
            "name": "nonReentrant",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1379:2:11"
            },
            "src": "1358:199:11",
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1532,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 1533,
            "src": "1563:29:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 1529,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1563:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1531,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 1530,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1571:2:11",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1563:11:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 1534,
        "src": "619:976:11"
      }
    ],
    "src": "0:1596:11"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol",
      "exportedSymbols": {
        "ReentrancyGuard": [
          1533
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 1494,
        "name": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "attributes": {
          "SourceUnit": 1603,
          "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "scope": 1534,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1495,
        "name": "ImportDirective",
        "src": "25:60:11"
      },
      {
        "attributes": {
          "contractDependencies": [
            1602
          ],
          "contractKind": "contract",
          "documentation": "@dev Contract module that helps prevent reentrant calls to a function.\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\navailable, which can be applied to functions to make sure there are no nested\n(reentrant) calls to them.\n * Note that because there is a single `nonReentrant` guard, functions marked as\n`nonReentrant` may not call one another. This can be worked around by making\nthose functions `private`, and then adding `external` `nonReentrant` entry\npoints to them.",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1533,
            1602
          ],
          "name": "ReentrancyGuard",
          "scope": 1534
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Initializable",
                  "referencedDeclaration": 1602,
                  "type": "contract Initializable"
                },
                "id": 1496,
                "name": "UserDefinedTypeName",
                "src": "647:13:11"
              }
            ],
            "id": 1497,
            "name": "InheritanceSpecifier",
            "src": "647:13:11"
          },
          {
            "attributes": {
              "constant": false,
              "name": "_guardCounter",
              "scope": 1533,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1498,
                "name": "ElementaryTypeName",
                "src": "733:7:11"
              }
            ],
            "id": 1499,
            "name": "VariableDeclaration",
            "src": "733:29:11"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initialize",
              "scope": 1533,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1500,
                "name": "ParameterList",
                "src": "788:2:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1503,
                "name": "ParameterList",
                "src": "810:0:11"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1577,
                      "type": "modifier ()",
                      "value": "initializer"
                    },
                    "id": 1501,
                    "name": "Identifier",
                    "src": "798:11:11"
                  }
                ],
                "id": 1502,
                "name": "ModifierInvocation",
                "src": "798:11:11"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1499,
                              "type": "uint256",
                              "value": "_guardCounter"
                            },
                            "id": 1504,
                            "name": "Identifier",
                            "src": "959:13:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 1505,
                            "name": "Literal",
                            "src": "975:1:11"
                          }
                        ],
                        "id": 1506,
                        "name": "Assignment",
                        "src": "959:17:11"
                      }
                    ],
                    "id": 1507,
                    "name": "ExpressionStatement",
                    "src": "959:17:11"
                  }
                ],
                "id": 1508,
                "name": "Block",
                "src": "810:173:11"
              }
            ],
            "id": 1509,
            "name": "FunctionDefinition",
            "src": "769:214:11"
          },
          {
            "attributes": {
              "documentation": "@dev Prevents a contract from calling itself, directly or indirectly.\nCalling a `nonReentrant` function from another `nonReentrant`\nfunction is not supported. It is possible to prevent this from happening\nby making the `nonReentrant` function external, and make it call a\n`private` function that does the actual work.",
              "name": "nonReentrant",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1510,
                "name": "ParameterList",
                "src": "1379:2:11"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "+=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1499,
                              "type": "uint256",
                              "value": "_guardCounter"
                            },
                            "id": 1511,
                            "name": "Identifier",
                            "src": "1392:13:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 1512,
                            "name": "Literal",
                            "src": "1409:1:11"
                          }
                        ],
                        "id": 1513,
                        "name": "Assignment",
                        "src": "1392:18:11"
                      }
                    ],
                    "id": 1514,
                    "name": "ExpressionStatement",
                    "src": "1392:18:11"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1516
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "localCounter",
                          "scope": 1527,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1515,
                            "name": "ElementaryTypeName",
                            "src": "1420:7:11"
                          }
                        ],
                        "id": 1516,
                        "name": "VariableDeclaration",
                        "src": "1420:20:11"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1499,
                          "type": "uint256",
                          "value": "_guardCounter"
                        },
                        "id": 1517,
                        "name": "Identifier",
                        "src": "1443:13:11"
                      }
                    ],
                    "id": 1518,
                    "name": "VariableDeclarationStatement",
                    "src": "1420:36:11"
                  },
                  {
                    "id": 1519,
                    "name": "PlaceholderStatement",
                    "src": "1466:1:11"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                  "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                                }
                              ],
                              "overloadedDeclarations": [
                                1786,
                                1787
                              ],
                              "referencedDeclaration": 1787,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1520,
                            "name": "Identifier",
                            "src": "1477:7:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1516,
                                  "type": "uint256",
                                  "value": "localCounter"
                                },
                                "id": 1521,
                                "name": "Identifier",
                                "src": "1485:12:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1499,
                                  "type": "uint256",
                                  "value": "_guardCounter"
                                },
                                "id": 1522,
                                "name": "Identifier",
                                "src": "1501:13:11"
                              }
                            ],
                            "id": 1523,
                            "name": "BinaryOperation",
                            "src": "1485:29:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"ReentrancyGuard: reentrant call\"",
                              "value": "ReentrancyGuard: reentrant call"
                            },
                            "id": 1524,
                            "name": "Literal",
                            "src": "1516:33:11"
                          }
                        ],
                        "id": 1525,
                        "name": "FunctionCall",
                        "src": "1477:73:11"
                      }
                    ],
                    "id": 1526,
                    "name": "ExpressionStatement",
                    "src": "1477:73:11"
                  }
                ],
                "id": 1527,
                "name": "Block",
                "src": "1382:175:11"
              }
            ],
            "id": 1528,
            "name": "ModifierDefinition",
            "src": "1358:199:11"
          },
          {
            "attributes": {
              "constant": false,
              "name": "______gap",
              "scope": 1533,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256[50]",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "uint256[50]"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 1529,
                    "name": "ElementaryTypeName",
                    "src": "1563:7:11"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "3530",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "number",
                      "type": "int_const 50",
                      "value": "50"
                    },
                    "id": 1530,
                    "name": "Literal",
                    "src": "1571:2:11"
                  }
                ],
                "id": 1531,
                "name": "ArrayTypeName",
                "src": "1563:11:11"
              }
            ],
            "id": 1532,
            "name": "VariableDeclaration",
            "src": "1563:29:11"
          }
        ],
        "id": 1533,
        "name": "ContractDefinition",
        "src": "619:976:11"
      }
    ],
    "id": 1534,
    "name": "SourceUnit",
    "src": "0:1596:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-17T20:54:56.224Z",
  "devdoc": {
    "details": "Contract module that helps prevent reentrant calls to a function. * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. * Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them.",
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}